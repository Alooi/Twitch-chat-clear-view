[{"C:\\Users\\Apple\\Google Drive\\PersonalPrograms\\TwitchAPI-react\\twitch-clear-view\\src\\index.js":"1","C:\\Users\\Apple\\Google Drive\\PersonalPrograms\\TwitchAPI-react\\twitch-clear-view\\src\\reportWebVitals.js":"2","C:\\Users\\Apple\\Google Drive\\PersonalPrograms\\TwitchAPI-react\\twitch-clear-view\\src\\App.js":"3","C:\\Users\\Apple\\Google Drive\\PersonalPrograms\\TwitchAPI-react\\twitch-clear-view\\src\\tracker.js":"4","C:\\Users\\Apple\\Google Drive\\PersonalPrograms\\TwitchAPI-react\\twitch-clear-view\\src\\count.js":"5"},{"size":500,"mtime":1609626954136,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":1609626954136,"results":"8","hashOfConfig":"7"},{"size":2634,"mtime":1609812263213,"results":"9","hashOfConfig":"7"},{"size":714,"mtime":1609643958655,"results":"10","hashOfConfig":"7"},{"size":806,"mtime":1609812391975,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1hb6slt",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"14"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Apple\\Google Drive\\PersonalPrograms\\TwitchAPI-react\\twitch-clear-view\\src\\index.js",[],["25","26"],"C:\\Users\\Apple\\Google Drive\\PersonalPrograms\\TwitchAPI-react\\twitch-clear-view\\src\\reportWebVitals.js",[],"C:\\Users\\Apple\\Google Drive\\PersonalPrograms\\TwitchAPI-react\\twitch-clear-view\\src\\App.js",["27","28","29","30","31","32","33","34"],"import logo from './logo.svg';\nimport ComfyJS from 'comfy.js';\nimport {useState} from 'react';\nimport twitchIcon from './Assets/twitch_icon.png';\nimport './App.css';\nimport tracker from './tracker';\nimport count from './count';\nimport {XYPlot, HorizontalBarSeries, AbstractSeries, XAxis, YAxis,LabelSeries} from 'react-vis';\nimport 'antd/dist/antd.css';\nimport {Slider} from 'antd';\n\nvar counter = 0;\nvar data = [];\nvar messages = [];\nvar height = 400;\nvar width = window.innerWidth/2;\n\n\nfunction App() {\n  const [limit, setlimit] = useState(100);\n  const [message, setMessage] = useState(\"\");\n  const [channel, setchannel] = useState(\"auronplay\");\n  // const [counter, setCounter] = useState(0);\n  const [counters, setcounters] = useState({})\n  function handleInit(channel){\n    ComfyJS.Init(channel);\n    ComfyJS.onChat = (user, message) => {\n      messages.push(message);\n      count(messages,setcounters,limit);\n      counter++;\n      setMessage(message);\n      // console.log(messages);\n      // tracker(message,counters,setcounters,messages);\n    }\n  }\n    \n  function getHighest(){\n    var items = Object.keys(counters).map(function(key) {\n      return [key, counters[key]];\n    });\n    items.sort(function(first, second) {\n      return second[1] - first[1];\n    });\n    // console.log(items.slice(0, 5));\n    items = items.slice(0, 5)\n    for (var i = 0; i < items.length; i++){\n      data[i] = {x: items[i][1], y: i, label: items[i][0]}\n      // console.log(items[i][0]);\n    }\n    // return (items)\n  }\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={twitchIcon} className='App-logo'/>\n        <h1>Twitch Chat Clear View</h1>\n      </header>\n        <label>\n          Name:\n          <input type=\"text\" name=\"name\" onChange={(value)=>{console.log(value.target.value);setchannel(value.target.value)}}/>\n          <button onClick={()=>{handleInit(channel)}}>Track!</button>\n        </label>\n        {/* <p>latest Message: {message}</p> */}\n        <p>total number of comments: {messages.length}</p>\n        <div className=\"graph\">\n          <XYPlot height={height} width={width}>\n            <HorizontalBarSeries data={data}/>\n            <LabelSeries data={data} animation/>\n            <XAxis/>\n          </XYPlot>\n          {/* <Slider/> */}\n          <p>frequency: {limit}</p>\n          <input type=\"number\" onChange={(value)=>{setlimit(value.target.value)}}/>\n        </div>\n        \n        <p>{getHighest()}</p>\n        <div>\n          <button onClick={()=>{messages.length = 0}}>reset</button>\n        </div>\n        <p>beta v0.1</p>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\Apple\\Google Drive\\PersonalPrograms\\TwitchAPI-react\\twitch-clear-view\\src\\tracker.js",["35"],"function tracker(message,getcounters,setcounters,messages){\r\n   var counters = getcounters;\r\n   const limit = 100;\r\n   // for (var j = 0; j < limit; j++){\r\n   //    if (messages.length-j >= 0){\r\n         // var words = messages[messages.length-j].split(\" \");\r\n         var words = message.split(\" \");\r\n         var tempWords = [];\r\n         for (var i = 0; i < words.length; i++){\r\n            if (!counters[words[i]]){\r\n               counters[words[i]] = 0;\r\n            }\r\n            if (!tempWords.includes(words[i])) {\r\n               counters[words[i]] += 1;\r\n               tempWords.push(words[i]);\r\n            }\r\n      //    }\r\n      // }\r\n   }\r\n   setcounters(counters);\r\n}\r\n\r\n\r\nexport default tracker;","C:\\Users\\Apple\\Google Drive\\PersonalPrograms\\TwitchAPI-react\\twitch-clear-view\\src\\count.js",[],{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":1,"column":8,"nodeType":"42","messageId":"43","endLine":1,"endColumn":12},{"ruleId":"40","severity":1,"message":"44","line":6,"column":8,"nodeType":"42","messageId":"43","endLine":6,"endColumn":15},{"ruleId":"40","severity":1,"message":"45","line":8,"column":38,"nodeType":"42","messageId":"43","endLine":8,"endColumn":52},{"ruleId":"40","severity":1,"message":"46","line":8,"column":61,"nodeType":"42","messageId":"43","endLine":8,"endColumn":66},{"ruleId":"40","severity":1,"message":"47","line":10,"column":9,"nodeType":"42","messageId":"43","endLine":10,"endColumn":15},{"ruleId":"40","severity":1,"message":"48","line":21,"column":10,"nodeType":"42","messageId":"43","endLine":21,"endColumn":17},{"ruleId":"40","severity":1,"message":"49","line":30,"column":7,"nodeType":"42","messageId":"43","endLine":30,"endColumn":14},{"ruleId":"50","severity":1,"message":"51","line":55,"column":9,"nodeType":"52","endLine":55,"endColumn":53},{"ruleId":"40","severity":1,"message":"53","line":3,"column":10,"nodeType":"42","messageId":"43","endLine":3,"endColumn":15},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'tracker' is defined but never used.","'AbstractSeries' is defined but never used.","'YAxis' is defined but never used.","'Slider' is defined but never used.","'message' is assigned a value but never used.","'counter' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'limit' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]